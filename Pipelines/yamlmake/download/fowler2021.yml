#define dataset_id, subset_list, credentials
- include: "../config/fowler2021_download.yml"

#https://ega-archive.org/download/downloader-quickguide-APIv3
#https://github.com/EGA-archive/ega-download-client
#download list of accession names
#not actually required since only the "subset_id" is needed to get all files
#but can be used to verify what's been downloaded
#md5_list will contain <EGAFnumber> <md5> <filename>
- action:
    name:  "download_accession_list"
    exec:  "local"
    conda: "pyega3"

    #no input

    output:
        stdout:    "datasets/{%dataset_id}/{=subset_id}/.meta/pyega3.stdout"
        stderr:    "datasets/{%dataset_id}/{=subset_id}/.meta/pyega3.stderr"
        file_list: "datasets/{%dataset_id}/{=subset_id}/.meta/file_list"
        md5_list:  "datasets/{%dataset_id}/{=subset_id}/.meta/md5_list"

    #get list of EGAF accessions and MD5s using pyega3
    shell: |
        pyega3 -cf {%credentials} files {=subset_id}    > {%stdout} 2> {%stderr}
        rm -f pyega3_output.log
        cat {%stderr} | grep EGAF | awk '{print $4}'    > {%file_list}
        cat {%stderr} | grep EGAF | awk '{print $4,$7,$8}' > {%md5_list}

#preemptively create each accession folder
#so we have a list of expected items to verify after each dataset download
- action:
    name: "create_subset_folders"
    exec: "local"

    input:
        accession_list: "datasets/{%dataset_id}/{=subset_id}/.meta/file_list"

    output:
        touch: "datasets/{%dataset_id}/{=subset_id}/.meta/{%name}.touch"

    shell: |
        for acc in $(cat {%accession_list})
        do
            mkdir -p datasets/{%dataset_id}/{=subset_id}/${acc}
        done
        touch {%touch}

#download and verify each file in the same job
#as we probably cant trust pyega3 to signal failure in its exit code
- action:
    name:  "download_and_verify_accessions"
    exec:  "local"
    conda: "pyega3"

    #ensure files downloaded as single chunks
    #workaround for buggy download system
    #pyega3_options: "-ms 100000000000" 
    #--max-retries -1 means unlimited but is not supported by this version of pyega3 it seems
    pyega3_options: "-cf {%credentials} -ms 100000000000" 
    #pyega3_options: "-cf {%credentials} -c 4" 

    input:
        accession_dir: "datasets/{%dataset_id}/{=subset_id}/{*accession}"
        md5_list:      "datasets/{%dataset_id}/{=subset_id}/.meta/md5_list"

    output:
        touch: "datasets/{%dataset_id}/{=subset_id}/{*accession}/.meta/{%name}.touch"

    shell: |
        cd {%accession_dir}
        pyega3 {%pyega3_options} fetch {*accession}
        rm -f pyega3_output.log
        cd -
        filename=$(cat {%md5_list} | grep -w '^{*accession}' | awk '{print $3}')
        expected=$(cat {%md5_list} | grep -w '^{*accession}' | awk '{print $2}')
        observed=$(cat {%accession_dir}/${filename} | md5sum | awk '{print $1}')
        [[ "${expected}" == "${observed}" ]] && touch {%touch}

