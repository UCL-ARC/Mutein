# Run varscan2, in the same pairwise pattern as mutect2.
# See also https://varscan.sourceforge.net/using-varscan.html
- action:
    name:  "varscan2"
    exec:  "qsub"
    conda: "varscan"

    qsub:
        time:  "6:00:00"
        mem:   "3G"
        cores: "2"

    input:
        ref_fasta: "{%ref/fasta_bgz}"
        tbam: "processed/{%dataset_id}/{=subset_id}/{*accession}/{*accession}_bqsr.bam"
        nbam: "processed/{%dataset_id}/{=subset_id}/{*accession}/{*normal}_link.bam"

    output_base_name: "processed/{%dataset_id}/{=subset_id}/{*accession}/{*accession}_{*normal}_somatic_varscan"
    output:
        snpvcf:  "{%output_base_name}.snp.vcf"
        indelvcf:  "{%output_base_name}.indel.vcf"

    # Varscan requires [m]pileup format as input.
    # We could have instead generated a pileup file from each _bqsr.bam file, and then passed these pairwise to varscan,
    # but the pileup files are very large and would have to persist until all varscan jobs are finished.
    # Better to use extra CPU generating a single pileup for each pair of bams we want to analyse,
    # piped directly into varscan so no intermediate disk space is needed.
    # Incidentally, if you pass two files into varscan somatic like so, you get this message:
    # $ varscan somatic file1.mpileup file2.mpileup outfiletemplate
    # ...
    # NOTICE: While dual input files are still supported, using a single mpileup file (normal-tumor) with the --mpileup 1 setting is strongly recommended.
    # This is where the option --mpileup 1 comes from, which doesn't seem to be documented in the help text.

    # Do we want the mpileup2snp subcommand instead? Probably not somatic calls.
    shell: |
        samtools mpileup \
          -f {%ref_fasta} \
          {%nbam} {%tbam} \
          | varscan somatic \
              - \
              {%output_base_name} \
              --output-vcf 1 \
              --mpileup 1
